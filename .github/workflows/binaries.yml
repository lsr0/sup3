name: Standalone Binaries

on:
  push:
  workflow_dispatch:

jobs:
  platforms:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            cross_arch_long: aarch64-unknown-linux-gnu
            cross_arch: aarch64
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Install Rust Stable'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.cross_arch_long }}

      - name: 'Set Cross-Compilation Target'
        if: matrix.cross_arch_long != ''
        run: |
          echo "CARGO_BUILD_TARGET=${{ matrix.cross_arch_long }}" >> $GITHUB_ENV
          echo "RUST_FLAGS=${{ matrix.cross_arch_long }}" >> $GITHUB_ENV

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: install
          args: --profile release-small --path . --root artifacts ${{ matrix.target && format('--release {0}', matrix.target) || '' }}

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: sup3-${{ runner.os }}-${{ matrix.cross_arch || runner.arch }}
          path: artifacts/bin/sup3*

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [platforms]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: job_artifacts

      - name: Generate Release Files
        run: |
          mkdir release/
          chmod +x -R job_artifacts/*/sup3
          tar cfz release/sup3-macos-x64_64-$GITHUB_REF_NAME.tar.gz -C job_artifacts/sup3-macOS-X64 sup3
          tar cfz release/sup3-linux-x64_64-$GITHUB_REF_NAME.tar.gz -C job_artifacts/sup3-Linux-X64 sup3
          zip release/sup3-windows-x64_64-$GITHUB_REF_NAME.zip job_artifacts/sup3-Windows-X64/sup3.exe --junk-paths

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: true
          files: release/*
          fail_on_unmatched_files: true
