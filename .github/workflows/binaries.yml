name: Standalone Binaries

on:
  push:
  workflow_dispatch:

jobs:
  platforms:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        cross_arch_long: ['']
        build_suffix: ['']
        include:
          - os: ubuntu-latest
            cross_arch_long: aarch64-unknown-linux-gnu
            cross_arch: aarch64
          - os: macos-latest
            cross_arch_long: aarch64-apple-darwin
            cross_arch: aarch64
          - os: ubuntu-latest
            cross_arch_long: x86_64-unknown-linux-musl
            cross_arch: x86_64
            build_suffix: -musl
          - os: ubuntu-latest
            cross_arch_long: aarch64-unknown-linux-musl
            cross_arch: aarch64
            build_suffix: -musl
    runs-on: ${{ matrix.os }}
    env:
      cargo_args: --profile release-small ${{ contains(matrix.os, 'windows') && '--target-dir=./target' || '' }} ${{ matrix.cross_arch_long && format('--target {0}', matrix.cross_arch_long) || '' }}
      target_path_component: ${{ matrix.cross_arch_long && format('/{0}', matrix.cross_arch_long) || '' }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Install Rust Stable'
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: ${{ matrix.cross_arch_long }}

      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross_arch_long != '' && !contains(matrix.cross_arch_long, 'apple') }}
          command: build
          args: ${{ env.cargo_args }}

      - name: 'Unit Tests'
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross_arch_long != '' && !contains(matrix.cross_arch_long, 'apple') }}
          command: test
          args: ${{ env.cargo_args }}

      - name: 'Integrated Tests'
        if: ${{ ! env.cross_arch }}
        run: |
          test/run-tests-container.sh target${{ env.target_path_component }}/sup3*

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: sup3-${{ runner.os }}-${{ matrix.cross_arch || runner.arch }}${{ matrix.build_suffix}}
          path: target${{ env.target_path_component }}/release-small/sup3*
          if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [platforms]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: job_artifacts

      - name: Generate Release Files
        run: |
          mkdir release/
          chmod +x -R job_artifacts/*/sup3
          tar cfz release/sup3-macos-x86_64-$GITHUB_REF_NAME.tar.gz -C job_artifacts/sup3-macOS-X64 sup3
          tar cfz release/sup3-linux-x86_64-$GITHUB_REF_NAME.tar.gz -C job_artifacts/sup3-Linux-X64 sup3
          tar cfz release/sup3-macos-aarch64-$GITHUB_REF_NAME.tar.gz -C job_artifacts/sup3-macOS-aarch64 sup3
          tar cfz release/sup3-linux-aarch64-$GITHUB_REF_NAME.tar.gz -C job_artifacts/sup3-Linux-aarch64 sup3
          zip release/sup3-windows-x86_64-$GITHUB_REF_NAME.zip job_artifacts/sup3-Windows-X64/sup3.exe --junk-paths
          tar cfz release/sup3-linux-x86_64-musl-$GITHUB_REF_NAME.tar.gz -C job_artifacts/sup3-Linux-x86_64-musl sup3
          tar cfz release/sup3-linux-aarch64-musl-$GITHUB_REF_NAME.tar.gz -C job_artifacts/sup3-Linux-aarch64-musl sup3

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: true
          files: release/*
          fail_on_unmatched_files: true
